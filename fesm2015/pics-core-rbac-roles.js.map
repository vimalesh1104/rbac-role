{"version":3,"file":"pics-core-rbac-roles.js","sources":["../../../../projects/pics-core/rbac-roles/src/lib/rbac-roles.service.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/urls/rbac-url.config.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/service/store.service.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/permissions/permission.store.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/service/data-store.service.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/constants/app-constants.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/service/alert.service.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/service/microstrategy.service.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/service/rbac.service.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@shared/alert/alert.component.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@shared/alert/alert.component.html","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/directives/permission.directive.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/directives/show-field.directives.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/roles/roles.component.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/roles/roles.component.html","../../../../projects/pics-core/rbac-roles/src/lib/rbac-roles.component.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/directives/directives.module.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@shared/alert/alert.module.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/pics-rbac-roles.module.ts","../../../../projects/pics-core/rbac-roles/src/lib/rbac-roles.module.ts","../../../../projects/pics-core/rbac-roles/src/public-api.ts","../../../../projects/pics-core/rbac-roles/src/pics-core-rbac-roles.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RbacRolesService {\r\n\r\n  constructor() { }\r\n}\r\n","export class RoleConfig {\r\n  public static EndPoint = {\r\n    role: {\r\n      getAllUserRole: '/access-control/role',\r\n      createRole: '/access-control/role/create',\r\n      getLandingPage: '/platform/menu/application',\r\n      addPolicyGroup: '/access-control/role',\r\n      getAllOrgRole: '/access-control/role/organization/{orgid}',\r\n      dossier: '/dossier'\r\n    }\r\n  };\r\n}\r\n\r\nexport class UserConfig {\r\n  public static EndPoint = {\r\n    \r\n    User: {\r\n      getAllUserList: '/org/user',\r\n      getAllUserActiveInactive: '/org/user?includeInactiveUsers=true',\r\n      activateUser: '/org/user/activate',\r\n      createUser: '/org/user/create',\r\n      userRole: '/org/user/role',\r\n      managementgroup: '/org/team/managementgroup',\r\n      getAllUserOrgList: '/org/user/organization/'\r\n    },\r\n    Provider: {\r\n      getProviderList: '/ref/provider',\r\n      searchProviderList: '/ref/provider/search',\r\n      addProviderUser: '/ref/provider/create/account'\r\n    }\r\n  };\r\n}\r\nexport class AttachmentConfig {\r\n  public static EndPoint = {\r\n    Attachments: {\r\n      GetAttachmentReferral: '/ref/attachment/referral',\r\n      GetCategoryLookup: '/platform/master/lookup/lookupbycategoryname',\r\n      UploadKey: '/common/files/upload-key',\r\n      DownloadKey: '/common/files/download-key',\r\n      PostAttachment: '/ref/attachment/create',\r\n      PutAttachment: '/ref/attachment'\r\n    }\r\n  };\r\n}\r\nexport class PolicyGroupConfig {\r\n  public static EndPoint = {\r\n    policyGroup: {\r\n      getPolicyGroupList: '/platform/page-designer/policyGroup',\r\n      getAllPolicyGroupList: '/platform/page-designer/policyGroup/all',\r\n      createPolicyGroup: '/platform/page-designer/policyGroup',\r\n      getOrgPolicyGroups: '/platform/page-designer/policyGroup/organization/{organizationid}'\r\n    }\r\n  };\r\n}\r\nexport class PermissionsURL {\r\n  public static EndPoints = {\r\n    permission: {\r\n      permissionRoleById: '/access-control/permission/role/{id}',\r\n    },\r\n    page: {\r\n      getPageInformation: '/org/user/page/menulist',\r\n      updateMenuOrder: '/access-control/permission/updateMenuOrder'\r\n    }\r\n  };\r\n}\r\n\r\nexport class RBACINFO {\r\n  apiHost ='';\r\n  tokenKey = '';\r\n  others?: any;\r\n  orgID?: any;\r\n  environment?: Environment;\r\n}\r\nexport class Environment {\r\n  mstrUsername?: string;\r\n  mstrPassword?: string;\r\n  mstrURL?: string;\r\n  mstrProjectID?: string;\r\n  applicationid?: string;\r\n  priority?: string\r\n}\r\n\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport class Store<T> {\r\n  state$: Observable<T>;\r\n  private _state$: BehaviorSubject<T>;\r\n\r\n  protected constructor(initialState: T) {\r\n    this._state$ = new BehaviorSubject(initialState);\r\n    this.state$ = this._state$.asObservable();\r\n  }\r\n\r\n  get state(): T {\r\n    return this._state$.getValue();\r\n  }\r\n\r\n  setState(nextState: T): void {\r\n    this._state$.next(nextState);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Store } from '../service/store.service';\r\n\r\n@Injectable()\r\nexport class PermissionStore extends Store<any> {\r\n  constructor() {\r\n    super({});\r\n  }\r\n\r\n  setStore(data: any): void {\r\n    if(data){\r\n      this.setState({ ...this.state, ...data });\r\n    }\r\n  }\r\n\r\n  getStore(type: string = 'P'): Observable<any> {\r\n    if (type === 'P') return of(this.state);\r\n    else return of(this.state);\r\n  }\r\n\r\n  private flat(array: any[]) {\r\n    let result: any[] = [];\r\n    if(array){\r\n      array.forEach(item => {\r\n        result.push(item);\r\n        if (item && Array.isArray(item)) {\r\n          result = result.concat(this.flat(item));\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class DataStoreService {\r\n  private currentStoreSubject = new BehaviorSubject<any>({} as any);\r\n  public currentStore = this.currentStoreSubject.asObservable();\r\n\r\n  constructor() {\r\n    // test code\r\n  }\r\n\r\n  setData(key: string, value: any) {\r\n    const currentStore = this.getCurrentStore();\r\n    currentStore[key] = value;\r\n    this.currentStoreSubject.next(currentStore);\r\n  }\r\n\r\n  setObject(value: any) {\r\n    this.currentStoreSubject.next(value);\r\n  }\r\n\r\n  getData(key: string): any {\r\n    const currentStore = this.getCurrentStore();\r\n    return currentStore[key];\r\n  }\r\n\r\n  clearStore() {\r\n    const currentStore = this.getCurrentStore();\r\n    Object.keys(currentStore).forEach((key) => {\r\n      delete currentStore[key];\r\n    });\r\n    this.currentStoreSubject.next(currentStore);\r\n  }\r\n\r\n  getCurrentStore(): any {\r\n    return this.currentStoreSubject.value;\r\n  }\r\n}\r\n","export class AppConstants {\r\n  public static errorMessage = 'Something went wrong!';\r\n  public static regexEmail = '^[0-9a-zA-Z.-]+[@][0-9a-zA-Z.-]+[.][0-9a-zA-Z]{2,}$';\r\n}","import { Injectable } from '@angular/core';\r\nimport { NavigationStart, Router } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\n  export class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private keepAfterRouteChange = false;\r\n\r\n    constructor(private router: Router) {\r\n      // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\r\n      router.events.subscribe(event => {\r\n        if (event instanceof NavigationStart) {\r\n          if (this.keepAfterRouteChange) {\r\n            // only keep for a single route change\r\n            this.keepAfterRouteChange = false;\r\n          } else {\r\n            // clear alert messages\r\n            this.clear();\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    getAlert(): Observable<any> {\r\n      return this.subject.asObservable();\r\n    }\r\n\r\n    success(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Success, message, keepAfterRouteChange);\r\n    }\r\n\r\n    error(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Error, message, keepAfterRouteChange);\r\n    }\r\n\r\n    info(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Info, message, keepAfterRouteChange);\r\n    }\r\n\r\n    warn(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Warning, message, keepAfterRouteChange);\r\n    }\r\n\r\n    alert(type: AlertType, message: string, keepAfterRouteChange = false) {\r\n      this.keepAfterRouteChange = keepAfterRouteChange;\r\n      this.subject.next(<Alert>{ type: type, message: message });\r\n    }\r\n\r\n    clear() {\r\n      // clear alerts\r\n      this.subject.next(<any>{});\r\n    }\r\n  }\r\n  export interface DynamicObject {\r\n    [key: string]: any;\r\n  }\r\n\r\n  export enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n  }\r\n  export class Alert {\r\n    type!: AlertType;\r\n    message!: string;\r\n  }\r\n  export interface Insights {\r\n    name: string;\r\n    series: Series[];\r\n  }\r\n  export interface Series {\r\n    value: number;\r\n    name: string;\r\n    month: string;\r\n  }\r\n\r\n  export interface Status {\r\n    name: string;\r\n    value: number;\r\n  }\r\n\r\n  export class UserGroupDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    constructor(data?: Partial<UserGroupDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserRolePageDto {\r\n    id?: number;\r\n    name?: string;\r\n    route?: string;\r\n    icon?: string | null;\r\n    order?: number;\r\n    ismenu?: boolean;\r\n    constructor(data?: Partial<UserRolePageDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserRoleDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    priority?: number;\r\n    order?: number;\r\n    defaultpage?: UserRolePageDto;\r\n    defaultpageid?: number;\r\n    parentid?: number | null;\r\n    parent?: UserRoleDto | null;\r\n    constructor(data?: Partial<UserRoleDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    priority?: number;\r\n    order?: number;\r\n    defaultpage?: UserRolePageDto;\r\n    defaultpageid?: number;\r\n    parentid?: number | null;\r\n    parent?: UserRoleDto | null;\r\n    constructor(data?: Partial<UserDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n  export class AccessManagementConfig {\r\n    public static EndPoint = {\r\n      Organization: {\r\n        getOrganizationList: '/org/organization/all',\r\n        getOrganization: '/platform/page-designer/page/organization/{orgId}?returnUserPage=false&excludeNoActiveVersionPages=true'\r\n      }\r\n    };\r\n  }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AlertService } from './alert.service';\r\nimport { DataStoreService } from './data-store.service';\r\nimport { PermissionStore } from '../permissions/permission.store';\r\n\r\n\r\ndeclare const microstrategy: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MicrostrategyService {\r\n  dossierList: any;\r\n  RBACORG: any;\r\n  environment: any;\r\n  constructor(private http: HttpClient,\r\n    private alertService: AlertService,\r\n    private permissionStore: PermissionStore,\r\n    private _storeservice: DataStoreService) {\r\n      this._storeservice.currentStore.subscribe((res: any) => {\r\n        if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n          this.RBACORG = res['RBACORG'];\r\n          this.environment = this.RBACORG['environment'] ? this.RBACORG['environment'] : '';\r\n        }\r\n      });\r\n    }\r\n\r\n  getAuthToken() {\r\n    const body = {\r\n      username: this.environment?.mstrUsername,\r\n      password: this.environment?.mstrPassword,\r\n      loginMode: 1\r\n    };\r\n    return this.http.post(`${this.environment?.mstrURL}/api/auth/login`, body, {\r\n      withCredentials: true,\r\n      headers: { 'Content-type': 'application/json' },\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  getDossier(projectId?: string, dossierId?: string, pageNo?: string) {\r\n    const permissions = this.permissionStore.state;\r\n    const projectUrl = `${this.environment?.mstrURL}/app/${projectId}`;\r\n    const dossierUrl = `${projectUrl}/${dossierId}/${pageNo}`;\r\n    microstrategy.dossier\r\n      .create({\r\n        placeholder: document.getElementById('dossierContainer'),\r\n        url: dossierUrl,\r\n        navigationBar: {\r\n          enabled: true,\r\n          gotoLibrary: permissions?.ANA_LIBRARY,\r\n          title: true,\r\n          toc: true,\r\n          reset: true,\r\n          reprompt: true,\r\n          share: true,\r\n          comment: true,\r\n          notification: true,\r\n          filter: true,\r\n          options: true,\r\n          search: true,\r\n          bookmark: true\r\n        },\r\n        enableCustomAuthentication: true,\r\n        enableResponsive: false,\r\n        containerWidth: 400,\r\n        containerHeight: 400,\r\n        customAuthenticationType: microstrategy.dossier.CustomAuthenticationType.AUTH_TOKEN,\r\n        getLoginToken: async () => {\r\n          const response = await this.getAuthToken().toPromise();\r\n          return response.headers.get('x-mstr-authtoken');\r\n        }\r\n      })\r\n      .catch((_err: any) => this.alertService.error(`Failed to connect ${this.environment?.mstrURL}`));\r\n  }\r\n\r\n  async getLibraryDetails(RBACORG?: any) {\r\n    const token = await this.getAuthToken().toPromise();\r\n    const authtoken = token.headers.get('x-mstr-authtoken')\r\n    const headerInfo = {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json',\r\n      'X-MSTR-AuthToken': authtoken ? authtoken: '',\r\n      'X-MSTR-ProjectID': this.environment?.mstrProjectID\r\n    };\r\n    return this.http\r\n      .get(`${this.environment?.mstrURL}/api/library`, {\r\n        withCredentials: true,\r\n        headers: headerInfo\r\n      })\r\n      .toPromise()\r\n      .then((response: any) => {\r\n        return response.map((mstr: any) => ({\r\n          id: mstr.target.id,\r\n          projectId: mstr.projectId,\r\n          name: mstr.target.name\r\n        }));\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n// import { HttpService } from './http.service';\r\nimport { AttachmentConfig, PermissionsURL, PolicyGroupConfig, RoleConfig, UserConfig } from '../urls/rbac-url.config';\r\nimport { DataStoreService } from './data-store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RbacService {\r\n  httpService:any;\r\n  constructor(private _storeservice: DataStoreService) {\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if(res){\r\n        this.httpService = res['HTTPSERVICE']\r\n      }\r\n    })\r\n  }\r\n  // constructor(private httpService: HttpService) {}\r\n\r\n  getAllUserList(key?: string): Observable<any> {\r\n    return this.httpService.get(`${UserConfig.EndPoint.User.getAllUserList}/${key}`);\r\n  }\r\n  getAllUserOrgList(orgid: any) {\r\n    return this.httpService.get(UserConfig.EndPoint.User.getAllUserOrgList + orgid);\r\n  }\r\n  saveUser(data: any) {\r\n    return this.httpService.post(UserConfig.EndPoint.User.createUser, data);\r\n  }\r\n  updateUser(data: any, userid: string) {\r\n    return this.httpService.put(`${UserConfig.EndPoint.User.getAllUserList}/${userid}`, data);\r\n  }\r\n  deleteUser(id?: string) {\r\n    return this.httpService.delete(`${UserConfig.EndPoint.User.getAllUserList}/${id}`);\r\n  }\r\n  activateUser(data: any) {\r\n    return this.httpService.post(UserConfig.EndPoint.User.activateUser, data);\r\n  }\r\n  addProviderUser(data: any) {\r\n    return this.httpService.post(UserConfig.EndPoint.Provider.addProviderUser, data);\r\n  }\r\n  addUserRole(data: any) {\r\n    return this.httpService.post(UserConfig.EndPoint.User.userRole, data);\r\n  }\r\n  uploadKey(objparams: any) {\r\n    return this.httpService.post(AttachmentConfig.EndPoint.Attachments.UploadKey, objparams);\r\n  }\r\n  getOrgPolicyGroupList(orgid: any) {\r\n    return this.httpService.get(\r\n      PolicyGroupConfig.EndPoint.policyGroup.getOrgPolicyGroups.replace('{organizationid}', String(orgid))\r\n    );\r\n  }\r\n  getAllPolicyGroupList(policyGroupId?: number) {\r\n    const endPoint = policyGroupId\r\n      ? `${PolicyGroupConfig.EndPoint.policyGroup.getPolicyGroupList}/${policyGroupId}`\r\n      : PolicyGroupConfig.EndPoint.policyGroup.getAllPolicyGroupList;\r\n    return this.httpService.get(endPoint);\r\n  }\r\n  getPolicyGroupById(id: any) {\r\n    return this.httpService.get(PolicyGroupConfig.EndPoint.policyGroup.getPolicyGroupList + '/' + id);\r\n  }\r\n\r\n  getPolicyGroupsByManagementGroup(policyGroupId: number) {\r\n    return this.httpService.get(`/org/policyGroup/managementgroup/${policyGroupId}`);\r\n  }\r\n\r\n  createPolicyGroup(data: any) {\r\n    return this.httpService.post(PolicyGroupConfig.EndPoint.policyGroup.createPolicyGroup, data);\r\n  }\r\n\r\n  updatePolicyGroup(id: number, item: any) {\r\n    return this.httpService.put(`${PolicyGroupConfig.EndPoint.policyGroup.getPolicyGroupList}/${id}`, item);\r\n  }\r\n\r\n  deletePolicyGroup(id: string) {\r\n    return this.httpService.delete(`${PolicyGroupConfig.EndPoint.policyGroup.getPolicyGroupList}/${id}`);\r\n  }\r\n  getAllUserRole(id?: any) {\r\n    return this.httpService.get(RoleConfig.EndPoint.role.getAllOrgRole.replace('{orgid}', String(id)));\r\n  }\r\n\r\n  deleteRole(id: string) {\r\n    return this.httpService.delete(`${RoleConfig.EndPoint.role.getAllUserRole}/${id}`);\r\n  }\r\n\r\n  getRoleById(roleid: string) {\r\n    return this.httpService.get(`${RoleConfig.EndPoint.role.getAllUserRole}/${roleid}`);\r\n  }\r\n\r\n  createRole(data: any) {\r\n    return this.httpService.post(RoleConfig.EndPoint.role.createRole, data);\r\n  }\r\n\r\n  updateRole(roleId: any, data: any) {\r\n    return this.httpService.put(`${RoleConfig.EndPoint.role.getAllUserRole}/${roleId}`, data);\r\n  }\r\n\r\n  getLandingPage(id: any) {\r\n    return this.httpService.get(`${RoleConfig.EndPoint.role.getLandingPage}/${id}`);\r\n  }\r\n\r\n  createPolicyGroupForRole(roleId: number, data: any) {\r\n    return this.httpService.post(`${RoleConfig.EndPoint.role.addPolicyGroup}/${roleId}/policygroups`, data);\r\n  }\r\n\r\n  updatePolicyGroupForRole(roleId: number, data: any) {\r\n    return this.httpService.put(`${RoleConfig.EndPoint.role.addPolicyGroup}/${roleId}/policygroups`, data);\r\n  }\r\n  getReportDashbaord() {\r\n    return this.httpService.get(`${RoleConfig.EndPoint.role.dossier}`);\r\n  }\r\n  getPermissionRoleById(id: string) {\r\n    return this.httpService.get(PermissionsURL.EndPoints.permission.permissionRoleById.replace('{id}', id));\r\n  }\r\n  getManagementGroupTree(_organizationid: any) {\r\n    return this.httpService.get('/org/management-group/organization/tree');\r\n  }\r\n\r\n  getAllPages() {\r\n    return this.httpService.get(PermissionsURL.EndPoints.page.getPageInformation);\r\n  }\r\n  updateMenuOrder(page: any) {\r\n    return this.httpService.post(PermissionsURL.EndPoints.page.updateMenuOrder, page);\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Alert, AlertService, AlertType } from '../../@core/service/alert.service';\r\nconst DISPLAY_IN_SECONDS = 8;\r\n@Component({\r\n  // moduleId: module.id,\r\n  selector: 'app-alert',\r\n  templateUrl: 'alert.component.html',\r\n  styleUrls: ['./alert.component.scss']\r\n})\r\nexport class AlertComponent implements OnInit {\r\n  alerts: Alert[] = [];\r\n\r\n  constructor(private alertService: AlertService) {}\r\n\r\n  ngOnInit() {\r\n    this.alertService.getAlert().subscribe((alert: Alert) => {\r\n      if (!alert) {\r\n        // clear alerts when an empty alert is received\r\n        this.alerts = [];\r\n        return;\r\n      }\r\n\r\n      // add alert to array\r\n      this.alerts.push(alert);\r\n      // remove alert after 5 seconds\r\n      setTimeout(() => this.removeAlert(alert), DISPLAY_IN_SECONDS * 1000);\r\n    });\r\n  }\r\n\r\n  removeAlert(alert: Alert) {\r\n    this.alerts = this.alerts.filter(x => x !== alert);\r\n  }\r\n\r\n  cssClass(alert: Alert) {\r\n    if (!alert) {\r\n      return;\r\n    }\r\n\r\n    // return css class based on alert type\r\n    switch (alert.type) {\r\n      case AlertType.Success:\r\n        return 'alert alert-success';\r\n      case AlertType.Error:\r\n        return 'alert alert-danger';\r\n      case AlertType.Info:\r\n        return 'alert alert-info';\r\n      case AlertType.Warning:\r\n        return 'alert alert-warning';\r\n    }\r\n  }\r\n}\r\n","<div *ngFor=\"let alert of alerts\" class=\"alert-animate {{ cssClass(alert) }} alert-dismissable\">\r\n  {{ alert.message }}\r\n  <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n</div>\r\n","import { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { PermissionStore } from '../permissions/permission.store';\r\n\r\n\r\n@Directive({\r\n  selector: '[fieldKey]'\r\n})\r\nexport class PermissionDirective implements AfterViewInit {\r\n  @Input() fieldKey!: string;\r\n  permissions: any;\r\n  constructor(\r\n    private readonly renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    private dataStore: PermissionStore\r\n  ) {\r\n  }\r\n  ngAfterViewInit() {\r\n    const permissions =  this.dataStore.state;\r\n     if (permissions) {\r\n      if (!permissions[this.fieldKey]) {\r\n        const template = this.elementRef.nativeElement;\r\n        if (template.tagName === 'A') {\r\n          if (template) {\r\n            const r = document.createElement(this.elementRef.nativeElement.tagName.toLowerCase());\r\n            r.innerHTML = template.innerHTML;\r\n            r.href = 'javascript:void(0);';\r\n            r['disabled'] = true;\r\n            r.className = template.className;\r\n            this.elementRef.nativeElement.parentNode.replaceChild(r, template);\r\n          }\r\n        } else if (\r\n          template.tagName === 'P-MULTISELECT' ||\r\n          template.tagName === 'P-DROPDOWN' ||\r\n          template.tagName === 'P-CHECKBOX' ||\r\n          template.tagName === 'P-TREESELECT' ||\r\n          template.tagName === 'P-RADIOBUTTON' ||\r\n          template.tagName === 'P-CALENDAR'\r\n        ) {\r\n          if (template) {\r\n            const r = document.createElement(this.elementRef.nativeElement.tagName.toLowerCase());\r\n            r.innerHTML = template.innerHTML;\r\n            r.className = template.className;\r\n            r.className += ' p-disabled';\r\n            this.elementRef.nativeElement.parentNode.replaceChild(r, template);\r\n          }\r\n        } else {\r\n          this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', 'true');\r\n          const childInputNodes = this.elementRef.nativeElement.querySelectorAll(\r\n            'input, select, textarea, button, a, ng-select, div, lable'\r\n          );\r\n          childInputNodes.forEach((elem: any) => {\r\n            this.renderer.setAttribute(elem, 'disabled', 'true');\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { PermissionStore } from '../permissions/permission.store';\r\n\r\n@Directive({\r\n  selector: '[showField]'\r\n})\r\nexport class ShowFieldDirective implements OnInit {\r\n  @Input() showField!: string;\r\n\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainer: ViewContainerRef,\r\n    private dataStore: PermissionStore\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const permissions = this.dataStore.state;\r\n    if (!permissions || !permissions[this.showField]) {\r\n      this.viewContainer.clear();\r\n    } else {\r\n      this.viewContainer.createEmbeddedView(this.templateRef);\r\n      const lookupIds = sessionStorage.getItem('LOOKUP_IDS');\r\n      if (lookupIds) {\r\n        const lookupIdArray = lookupIds.split(',');\r\n        Object.entries(permissions)\r\n          .filter(item => item[0].startsWith('GALKP_'))\r\n          .forEach(([key, value]) => {\r\n            for (const _value of <[]>value) {\r\n              const _key = key.replace('GALKP_', '');\r\n              if (\r\n                _key === this.showField &&\r\n                lookupIdArray.includes(String(_value['lookupid'])) &&\r\n                _value['action'] === 'H'\r\n              ) {\r\n                this.viewContainer.clear();\r\n              }\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from '../@core/constants/app-constants';\r\nimport { AlertService } from '../@core/service/alert.service';\r\nimport { RBACINFO } from '../@core/urls/rbac-url.config';\r\nimport { LandingPageModel, RoleModel, UserRoleDto } from '../@core/datamodel/rbacDataModel';\r\nimport { DataStoreService } from '../@core/service/data-store.service';\r\nimport { MicrostrategyService } from '../@core/service/microstrategy.service';\r\nimport { RbacService } from '../@core/service/rbac.service';\r\nimport { TreeNode } from 'primeng/api/treenode';\r\nimport { MenuItem } from 'primeng/api/menuitem';\r\ndeclare const $: any;\r\n@Component({\r\n  selector: 'roles',\r\n  templateUrl: './roles.component.html',\r\n  styleUrls: ['./roles.component.scss']\r\n})\r\nexport class RolesComponent implements OnInit {\r\n  roleId!: number;\r\n  roleList: RoleModel[] = [];\r\n  filteredRoleList: RoleModel[] = [];\r\n  isDisabled!: boolean;\r\n  selectedPermissionsGroup: { id: number; allow: boolean; write: boolean }[] = [];\r\n  userroles: UserRoleDto[] = [];\r\n  isDisabledOther!: boolean;\r\n  deletedId!: string;\r\n  modelRoleName: string = '';\r\n  roleForm!: FormGroup;\r\n  formSubmit!: boolean;\r\n  permissions: Array<any> = [];\r\n  landingPage: LandingPageModel[] = [];\r\n  policyGroupList: any;\r\n  permissionAllow!: boolean;\r\n  orgId: any;\r\n  reportDashboardList: any;\r\n  environment: any;\r\n  RBACORG: RBACINFO = new RBACINFO();\r\n  orgSubs!: Subscription;\r\n  items: MenuItem[] = [];\r\n  activeItem!: MenuItem;\r\n  firstTab!: boolean;\r\n  mainMenuList: any = [];\r\n  reArrangedList: any = [];\r\n  menuList: any = [];\r\n  subMenuList: any = [];\r\n  parent: any = [];\r\n  childMenuList: any = [];\r\n  showChildren: boolean = false;\r\n  parentMenulist: TreeNode[] = [];\r\n  selectedFile: TreeNode;\r\n  httpService:any;\r\n\r\n  buildTree = (parentId) => (item) => {\r\n    const children = this.menuList.filter((child) => child.parentid === item.id);\r\n    return {\r\n      ...item,\r\n      ...(children.length > 0 && { children: children.map(this.buildTree(item.id)) }),\r\n    };\r\n  };\r\n\r\n  nestedData() {\r\n    this.mainMenuList = this.menuList.filter((item) => !item.parentid).map(this.buildTree(null))\r\n  }\r\n\r\n  constructor(\r\n    injector: Injector,\r\n    private formBuilder: FormBuilder,\r\n    private alertService: AlertService,\r\n    private mstrService: MicrostrategyService,\r\n    private rolesService: RbacService,\r\n    private _storeservice: DataStoreService,\r\n    private permissionService: RbacService\r\n  ) {\r\n    this.formSubmit = false;\r\n    this.initializeform();\r\n    this.orgSubs =  this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n        this.formSubmit = false;\r\n        this.permissionAllow = false;\r\n        this.RBACORG = res['RBACORG'];\r\n        this.environment = this.RBACORG['environment'];\r\n        this.orgId = parseInt(this.RBACORG['orgID']);\r\n        this.getReportDashboard();\r\n        this.httpService = res['HTTPSERVICE']\r\n      if (this.orgId) {\r\n        this.getRoleList();\r\n        this.getPolicyGroupList();\r\n        this.getLandingPage();\r\n      }\r\n      }\r\n    });\r\n    this.items = [\r\n      {\r\n        label: 'Permissions',\r\n        icon: '',\r\n        command: event => {\r\n          this.activateMenu(event);\r\n        }\r\n      },\r\n      {\r\n        label: 'Menu Ordering',\r\n        icon: '',\r\n        command: event => {\r\n          this.activateMenu(event);\r\n        }\r\n      }\r\n    ];\r\n    this.activeItem = this.items[0];\r\n    this.firstTab = true;\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    console.log();\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.orgSubs.unsubscribe();\r\n  }\r\n  initializeform() {\r\n    this.roleForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      defaultpageid: ['', Validators.required],\r\n      parentid: [2],\r\n      policyGroupId: ['', Validators.required],\r\n      dossierid: ['']\r\n    });\r\n  }\r\n\r\n  get formValidate() {\r\n    return this.roleForm.controls;\r\n  }\r\n\r\n  getLandingPage() {\r\n    this.rolesService.getLandingPage('1').subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          this.landingPage = res['data'].filter((x: any) => x.route.charAt(0) === '/');\r\n        }\r\n      },\r\n      (error: any) => console.log(error)\r\n    );\r\n  }\r\n\r\n  getRoleList(_key?: string) {\r\n    this.rolesService.getAllUserRole(this.orgId).subscribe(\r\n      (res: any) => {\r\n        this.roleList = res['data'].filter((a: any) => a.name !== 'Super admin');\r\n        this.filteredRoleList = this.roleList;\r\n      },\r\n      (err: any) => console.log(err)\r\n    );\r\n  }\r\n\r\n  getPolicyGroupList(_managementGroupId?: number) {\r\n    this.rolesService.getOrgPolicyGroupList(this.orgId).subscribe(\r\n      (res: any) => {\r\n        this.policyGroupList = res['data'];\r\n      },\r\n      (err: any) => console.log(err)\r\n    );\r\n  }\r\n\r\n  searchRole(event: Event) {\r\n    const value = (event.target as HTMLInputElement).value.toLowerCase();\r\n    this.filteredRoleList = this.roleList.filter(a => a?.name?.toLowerCase().startsWith(value));\r\n  }\r\n\r\n  getRoleInfo(roleid: any) {\r\n    this.roleId = roleid;\r\n    if (roleid) {\r\n      this.isDisabled = true;\r\n      this.rolesService.getRoleById(roleid).subscribe((res: any) => {\r\n        this.permissionAllow = true;\r\n        this.roleInformation(res);\r\n      });\r\n    } else {\r\n      this.roleForm.reset();\r\n      this.permissions = [];\r\n      this.isDisabled = false;\r\n      this.isDisabledOther = false;\r\n      this.roleForm.enable();\r\n    }\r\n  }\r\n  roleInformation(res: any) {\r\n    this.roleForm.patchValue({\r\n      name: res.data.name,\r\n      defaultpageid: res.data.defaultpageid,\r\n      parentid: res.data.parentid,\r\n      policyGroupId:\r\n        res?.data?.policyGroups\r\n          .filter((item: any) => item)\r\n          .map((item: any) => {\r\n            return item['id'];\r\n          }) || [],\r\n      dossierid: JSON.parse(res.data.dossierid)?.id\r\n    });\r\n    this.permissions = [...res?.data?.permissions];\r\n    this.permissions = this.permissions\r\n      .map(f => {\r\n        return Object.assign({ isFormBuilder: false }, f);\r\n      })\r\n      .map(g => {\r\n        if (g.key === 'FORM') {\r\n          g.isFormBuilder = true;\r\n        } else {\r\n          g.isFormBuilder = false;\r\n        }\r\n        return g;\r\n      });\r\n    this.selectedPermissionsGroup = [];\r\n    if (res.data.permissions && res.data.permissions.length) {\r\n      res.data.permissions.forEach((ele: any) => {\r\n        this.getSelectedPermisions(ele);\r\n      });\r\n    }\r\n    this.isDisabledOther = !this.hasAccess;\r\n    const isAdmin = this.userroles.find(({ name }) => name === 'Admin');\r\n    if (isAdmin) {\r\n      this.roleForm.enable();\r\n      this.isDisabledOther = false;\r\n    } else if (!this.hasAccess || res.isreadonly) {\r\n      this.roleForm.controls['name'].disable();\r\n    } else {\r\n      this.roleForm.enable();\r\n    }\r\n  }\r\n  get hasAccess() {\r\n    return this.userroles.find(({ id, name }) => id === this.roleId || name === 'Admin');\r\n  }\r\n\r\n  isPrivilage(permission: any) {\r\n    if (permission && permission?.permissions && permission?.permissions?.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  selectAllPage(index: number, event: any) {\r\n    event.stopPropagation();\r\n    this.permissions[index].checked = event.target.checked;\r\n    this.setSelectedPermisions(\r\n      event.target.checked,\r\n      this.permissions[index].id,\r\n      this.permissions[index].checked,\r\n      this.permissions[index].checkedwrite\r\n    );\r\n    this.permissions[index].permissions.forEach((page: any) => {\r\n      page.checked = event.target.checked;\r\n      page.checkedwrite = event.target.checked;\r\n      this.setSelectedPermisions(event.target.checked, page.id, page.checked, page.checkedwrite);\r\n      page.permissions.forEach((privilege: any) => {\r\n        privilege.checked = event.target.checked;\r\n        privilege.checkedwrite = event.target.checked;\r\n        this.setSelectedPermisions(event.target.checked, privilege.id, privilege.checked, privilege.checkedwrite);\r\n      });\r\n    });\r\n  }\r\n\r\n  getSelectedPermisions(item: any) {\r\n    this.setSelectedPermisions(item.checked, item.id, item.checked, item.checkedwrite);\r\n    if (item.permissions && item.permissions.length) {\r\n      item.permissions.forEach((page: any) => {\r\n        this.setSelectedPermisions(page.checked, page.id, page.checked, page.checkedwrite);\r\n        if (page && page.permissions?.length) {\r\n          page.permissions.forEach((privilege: any) => {\r\n            this.setSelectedPermisions(privilege.checked, privilege.id, privilege.checked, privilege.checkedwrite);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  selectAllPrivilage(pageIndex: number, permissionIndex: number, event: any) {\r\n    event.stopPropagation();\r\n    this.permissions[pageIndex].checked = event.target.checked;\r\n    if (event.target.value === 'read' || event.target.value === 'on') {\r\n      this.permissions[pageIndex].permissions[permissionIndex].checked = event.target.checked;\r\n    }\r\n    if (event.target.value === 'write') {\r\n      this.permissions[pageIndex].permissions[permissionIndex].checkedwrite = event.target.checked;\r\n    }\r\n    this.setSelectedPermisions(\r\n      event.target.checked,\r\n      this.permissions[pageIndex].permissions[permissionIndex].id,\r\n      this.permissions[pageIndex].permissions[permissionIndex].checked,\r\n      this.permissions[pageIndex].permissions[permissionIndex].checkedwrite\r\n    );\r\n    if (event.target.value === 'read' || event.target.value === 'on') {\r\n      if (event.target.checked || !event.target.checked) {\r\n        this.permissions[pageIndex].permissions[permissionIndex].permissions.forEach((page: any) => {\r\n          page.checked = event.target.checked;\r\n          this.setSelectedPermisions(event.target.checked, page.id, page.checked, page.checkedwrite);\r\n        });\r\n      }\r\n    } else if (event.target.value === 'write') {\r\n      if (event.target.checked) {\r\n        this.permissions[pageIndex].permissions[permissionIndex].permissions.forEach((page: any) => {\r\n          page.checkedwrite = event.target.checked;\r\n          this.setSelectedPermisions(event.target.checked, page.id, page.checked, page.checkedwrite);\r\n        });\r\n      }\r\n    }\r\n    this.getPageChecked(pageIndex);\r\n  }\r\n\r\n  selectPage(pageIndex: number, permissionIndex: number, event: any) {\r\n    event.stopPropagation();\r\n    if (event.target.value === 'write') {\r\n      this.permissions[pageIndex].permissions[permissionIndex].checkedwrite = event.target.checked;\r\n    }\r\n    if (event.target.value === 'read') {\r\n      this.permissions[pageIndex].permissions[permissionIndex].checked = event.target.checked;\r\n    }\r\n    this.setSelectedPermisions(\r\n      event.target.checked,\r\n      this.permissions[pageIndex].permissions[permissionIndex].id,\r\n      this.permissions[pageIndex].permissions[permissionIndex].checked,\r\n      this.permissions[pageIndex].permissions[permissionIndex].checkedwrite\r\n    );\r\n    this.getPageChecked(pageIndex);\r\n  }\r\n\r\n  selectPrivilege(pageIndex: number, permissionIndex: number, privilegeIndex: number, event: any) {\r\n    event.stopPropagation();\r\n    if (event.target.value === 'write') {\r\n      this.permissions[pageIndex].permissions[permissionIndex].permissions[privilegeIndex].checkedwrite =\r\n        event.target.checked;\r\n    }\r\n    if (event.target.value === 'read' || event.target.value === 'on') {\r\n      this.permissions[pageIndex].permissions[permissionIndex].permissions[privilegeIndex].checked =\r\n        event.target.checked;\r\n    }\r\n    this.setSelectedPermisions(\r\n      event.target.checked,\r\n      this.permissions[pageIndex].permissions[permissionIndex].permissions[privilegeIndex].id,\r\n      this.permissions[pageIndex].permissions[permissionIndex].permissions[privilegeIndex].checked,\r\n      this.permissions[pageIndex].permissions[permissionIndex].permissions[privilegeIndex].checkedwrite\r\n    );\r\n    this.getPrivilageChecked(pageIndex, permissionIndex);\r\n    this.getPageChecked(pageIndex);\r\n  }\r\n\r\n  getPageChecked(pageIndex: number) {\r\n    if (\r\n      this.permissions[pageIndex].checked !== this.getChecked(this.permissions[pageIndex].permissions) &&\r\n      this.permissions[pageIndex].checkedwrite !== this.getCheckedWrite(this.permissions[pageIndex].permissions)\r\n    ) {\r\n      this.permissions[pageIndex].checked = this.getChecked(this.permissions[pageIndex].permissions);\r\n      this.setSelectedPermisions(\r\n        this.permissions[pageIndex].checked,\r\n        this.permissions[pageIndex].id,\r\n        this.permissions[pageIndex].checked,\r\n        this.permissions[pageIndex].checkedwrite\r\n      );\r\n    }\r\n  }\r\n\r\n  getPrivilageChecked(pageIndex: number, permissionIndex: number) {\r\n    if (\r\n      this.permissions[pageIndex].permissions[permissionIndex].checked !==\r\n      this.getChecked(this.permissions[pageIndex].permissions[permissionIndex].permissions)\r\n    ) {\r\n      this.permissions[pageIndex].permissions[permissionIndex].checked = this.getChecked(\r\n        this.permissions[pageIndex].permissions[permissionIndex].permissions\r\n      );\r\n      this.setSelectedPermisions(\r\n        this.permissions[pageIndex].permissions[permissionIndex].checked,\r\n        this.permissions[pageIndex].permissions[permissionIndex].id,\r\n        this.permissions[pageIndex].permissions[permissionIndex].checked,\r\n        this.permissions[pageIndex].permissions[permissionIndex].checkedwrite\r\n      );\r\n    } else if (\r\n      this.permissions[pageIndex].permissions[permissionIndex].checkedwrite !==\r\n      this.getCheckedWrite(this.permissions[pageIndex].permissions[permissionIndex].permissions)\r\n    ) {\r\n      this.permissions[pageIndex].permissions[permissionIndex].checkedwrite = this.getCheckedWrite(\r\n        this.permissions[pageIndex].permissions[permissionIndex].permissions\r\n      );\r\n      this.setSelectedPermisions(\r\n        this.permissions[pageIndex].permissions[permissionIndex].checked,\r\n        this.permissions[pageIndex].permissions[permissionIndex].id,\r\n        this.permissions[pageIndex].permissions[permissionIndex].checked,\r\n        this.permissions[pageIndex].permissions[permissionIndex].checkedwrite\r\n      );\r\n    }\r\n  }\r\n\r\n  selectAllAccess(value: boolean) {\r\n    this.permissions.forEach((page: any) => {\r\n      page.checked = value;\r\n      this.setSelectedPermisions(value, page.id, page.checked, page.checkedwrite);\r\n      if (page && page.permissions) {\r\n        page.permissions.forEach((permission: any) => {\r\n          permission.checked = value;\r\n          this.setSelectedPermisions(value, permission.id, permission.checked, permission.checkedwrite);\r\n          if (permission && permission.permissions?.length) {\r\n            permission.permissions.forEach((privilege: any) => {\r\n              privilege.checked = value;\r\n              privilege.checkedwrite = value;\r\n              this.setSelectedPermisions(value, privilege.id, privilege.checked, privilege.checkedwrite);\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  addNewRole(id: string) {\r\n    this.permissions = [];\r\n    this.formSubmit = false;\r\n    this.permissionAllow = false;\r\n    this.rolesService.getPermissionRoleById(id).subscribe(\r\n      (res: any) => {\r\n        this.permissionAllow = true;\r\n        this.permissions = res['data'];\r\n      },\r\n      (err: any) => console.log(err)\r\n    );\r\n  }\r\n\r\n  setSelectedPermisions(_selected: boolean, id: number, allow: boolean, write: boolean) {\r\n    const index = this.selectedPermissionsGroup.findIndex(res => res.id === id);\r\n    if (index === -1 && allow) {\r\n      this.selectedPermissionsGroup.push({ id, allow, write });\r\n    } else if (!allow && !write && index !== -1) {\r\n      this.selectedPermissionsGroup.splice(index, 1);\r\n    } else if (index !== -1) {\r\n      this.selectedPermissionsGroup = this.selectedPermissionsGroup.map(i => {\r\n        if (i.id === id) {\r\n          i.write = write;\r\n          i.allow = allow;\r\n        }\r\n        return i;\r\n      });\r\n    }\r\n  }\r\n\r\n  addRole() {\r\n    this.formSubmit = true;\r\n    let data = this.roleForm.getRawValue();\r\n    if (this.roleForm.valid) {\r\n      const dossierConfig = this.reportDashboardList?.filter((dossier: any) => dossier.id === data.dossierid)?.map((a: any) => ({\r\n          id: a.id,\r\n          projectId: a.projectId\r\n        }))[0];\r\n      data.priority = this.environment.priority;\r\n      data.applicationid = this.environment.applicationid;\r\n      data.parentid = 2;\r\n      data.permissions = this.selectedPermissionsGroup;\r\n      data.dossierid = JSON.stringify(dossierConfig);\r\n      data = Object.assign({ organizationid: this.orgId }, data);\r\n      if (this.roleId) {\r\n        data.id = Number(this.roleId);\r\n        this.rolesService.updateRole(this.roleId, data).subscribe(\r\n          () => {\r\n            this.getRoleList();\r\n            this.mapPolicyGroupToRole(this.roleId, data.policyGroupId);\r\n            this.alertService.success('Role updated successfully');\r\n          },\r\n          (err: any) => this.alertService.error(err.error.message)\r\n        );\r\n      } else {\r\n        data.id = 0;\r\n        data.priority = this.environment.priority;\r\n        this.rolesService.createRole(data).subscribe(\r\n          (res: any) => {\r\n            this.cancel();\r\n            if (data.policyGroupId) {\r\n              this.mapPolicyGroupToRole(res['data'], data.policyGroupId, 'add');\r\n            }\r\n            this.alertService.success('Role saved successfully');\r\n            this.getRoleList();\r\n          },\r\n          (err: any) => this.alertService.error(err.error.message)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  mapPolicyGroupToRole(id: number, data: [], action?: string) {\r\n    if (action === 'add') {\r\n      this.rolesService.createPolicyGroupForRole(id, data).subscribe(\r\n        () => console.log('policy group mapped to role successfully'),\r\n        (_err: any) => this.alertService.error(AppConstants.errorMessage)\r\n      );\r\n    } else {\r\n      this.rolesService.updatePolicyGroupForRole(id, data).subscribe(\r\n        () => console.log('policy group mapped to role successfully'),\r\n        (_err: any) => this.alertService.error(AppConstants.errorMessage)\r\n      );\r\n    }\r\n  }\r\n\r\n  getReturnValue(array: Array<any> = [], type?: string) {\r\n    return type === 'id'\r\n      ? array.map(({ id }) => id)\r\n      : array.map(id => {\r\n        return { id };\r\n      });\r\n  }\r\n\r\n  getChecked(item: Array<any>) {\r\n    return item.filter(({ checked }) => checked).length > 0;\r\n  }\r\n  getCheckedWrite(item: Array<any>) {\r\n    return item.filter(({ checkedwrite }) => checkedwrite).length > 0;\r\n  }\r\n\r\n  cancel() {\r\n    this.roleForm.reset();\r\n    this.roleForm.enable();\r\n    this.permissions = [];\r\n    this.formSubmit = false;\r\n    this.permissionAllow = false;\r\n    this.roleId = 0;\r\n  }\r\n\r\n  delete(event: Event, id: any) {\r\n    event.stopPropagation();\r\n    this.deletedId = id;\r\n    $('#Deleteuser').modal('show');\r\n  }\r\n\r\n  deleteRole() {\r\n    this.rolesService.deleteRole(this.deletedId).subscribe(\r\n      () => {\r\n        this.cancel();\r\n        this.alertService.success('Role deleted successfully');\r\n        $('#Deleteuser').modal('hide');\r\n        this.getRoleList();\r\n      },\r\n      (_err: any) => this.alertService.error('Failed to delete Role')\r\n    );\r\n  }\r\n\r\n  async getReportDashboard() {\r\n    this.reportDashboardList = await this.mstrService.getLibraryDetails(this.RBACORG);\r\n  }\r\n\r\n  // roleValidation(): any {\r\n  //   if (!this.roleForm.value.dossierid) {\r\n  //     this.alertService.warn('Please fill all required fields');\r\n  //     return false;\r\n  //   }\r\n  //   return true;\r\n  // }\r\n  onModelRole(value: string): void {\r\n    this.modelRoleName = value.replace(/\\w\\S*/g, (txt) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase());\r\n  }\r\n  \r\n  activateMenu(event) {\r\n    if (event.item.label == 'Page') {\r\n      this.firstTab = true;\r\n    } else {\r\n      this.firstTab = false;\r\n      this.getPageInformation();\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  \r\n  getPageInformation() {\r\n    this.permissionService.getAllPages().subscribe((res: any) => {\r\n      this.menuList = res?.data;\r\n      res.data.map((item, index) => { \r\n        item.label = item.name\r\n      });\r\n\r\n      this.nestedData();\r\n      console.log(this.mainMenuList);\r\n      // document.querySelector('#result').innerHTML = this.buildNavigation(this.menuList);\r\n\r\n      // res.data.map((item, index) => {\r\n      //   if (item.parentid == null) {\r\n      //     let obj = {\r\n      //       key : 1,\r\n      //       id: item.id,\r\n      //       parentid: item.parentid,\r\n      //       label: item.name,\r\n      //       data: 'Documents Folder',\r\n      //       icon: 'pi pi-fw pi-inbox',\r\n      //       children: []\r\n      //     }\r\n      //     this.mainMenuList.push(obj)\r\n      //   }\r\n      // });\r\n\r\n      // this.mainMenuList.map((menu, index1) => {\r\n      //   this.menuList.map((list, index) => {\r\n      //     if (list?.parentid == menu?.id) {\r\n      //       let obj = {\r\n      //         key : 2,\r\n      //         id: list.id,\r\n      //         parentid: list.parentid,\r\n      //         label: list.name,\r\n      //         data: 'Documents Folder',\r\n      //         icon: 'pi pi-fw pi-inbox',\r\n      //         children: []\r\n      //       }\r\n      //       this.mainMenuList[index1].children.push(obj);\r\n      //     }\r\n      //   })\r\n      // })\r\n\r\n      // this.mainMenuList.map((menu, index1) => {\r\n      //   menu.children.map((subitem, subindex) => {\r\n      //     this.menuList.map((list, index) => {\r\n      //       if(list.parentid == subitem.id)\r\n      //       {\r\n      //         let obj = {\r\n      //             key : 3,              \r\n      //             id: list.id,\r\n      //             parentid: list.parentid,\r\n      //             label: list.name,\r\n      //             data: 'Documents Folder',\r\n      //             icon: 'pi pi-fw pi-inbox',\r\n      //           }\r\n      //           subitem.children.push(obj);\r\n      //       }\r\n\r\n      //     })\r\n      //   })\r\n      // })\r\n\r\n\r\n\r\n    });\r\n  }\r\n  \r\n  updateMenuOrder() {\r\n    this.mainMenuList.forEach((element, index) => {\r\n      let data = {\r\n        'menuorder': index + 1,\r\n        'id': element.rolepermissionid,        \r\n        'roleid' :   this.roleId\r\n        \r\n      }\r\n      this.reArrangedList.push(data)\r\n      if(element?.children?.length > 0){\r\n        element?.children?.forEach((childelement, childindex)=> {\r\n          let childdata = {\r\n            'menuorder': childindex + 1,\r\n            'id': childelement.rolepermissionid,\r\n            'roleid' :   this.roleId\r\n          }\r\n          this.reArrangedList.push(childdata)\r\n          if(childelement?.children?.length > 0){\r\n            childelement?.children?.forEach((childrenelement, childrenindex)=> {\r\n              let childrendata = {\r\n                'menuorder': childrenindex + 1,\r\n                'id': childrenelement.rolepermissionid,\r\n                'roleid' :   this.roleId\r\n              }\r\n              this.reArrangedList.push(childrendata)\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    console.log('this.rearrangelist', this.reArrangedList);\r\n    this.permissionService.updateMenuOrder({ pages: this.reArrangedList }).subscribe((res: any) => {\r\n      this.alertService.success('Updated Successfully!');\r\n      // this.Service.sendUpdate('Updated Successfully');\r\n      // this.getPageInformation();\r\n      window.location.reload();\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  nodeDrop(event) {\r\n    if (event.originalEvent.target.childNodes.length === 0) {\r\n      if (event.dragNode.parentid == event.dropNode.parentid) {\r\n        event.accept();\r\n      }\r\n      else {\r\n        this.alertService.success('not allowed to drop');\r\n      }\r\n      console.log('this.mainMenuList',  this.mainMenuList)\r\n    }\r\n    else {\r\n      this.alertService.success('not allowed to drop');\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","<app-alert></app-alert>\r\n<div class=\"permission\">\r\n  <div class=\"row\" [formGroup]=\"roleForm\">\r\n    <div class=\"col-lg-4 col-md-6 col-12\">\r\n      <div class=\"clearfix\"></div>\r\n      <div class=\"tab-content py-2 px-2 px-sm-0\">\r\n        <div class=\"tab-pane fade show active\">\r\n          <div class=\"form-group bgiconsearch\">\r\n            <input class=\"form-control\" fieldKey=\"SETTINGS_ROL_SEARCH_BY_NAME\" placeholder=\"Search by Role name\"\r\n              type=\"text\" (keyup)=\"searchRole($event)\" />\r\n          </div>\r\n          <div class=\"clearfix\"></div>\r\n          <div class=\"useracess\">\r\n            <div class=\"d-flex align-items-center justify-content-center h-100 w-100 ng-star-inserted\"\r\n              *ngIf=\"!filteredRoleList.length\">\r\n              <p>No Record Found</p>\r\n            </div>\r\n            <ng-container *ngFor=\"let item of filteredRoleList\">\r\n              <div class=\"row userdata align-items-center\" (click)=\"getRoleInfo(item.id)\" [ngClass]=\"{ active: +item.id === roleId }\">\r\n                <div class=\"col-md-10 col-sm-10 col-10 overflow_txt\">\r\n                  <span class=\"nameuser\">{{ item.name }}</span> <br />\r\n                </div>\r\n                <div class=\"col-md-2 text-right\">\r\n                  <span class=\"right-icons\">\r\n                    <em class=\"fa fa-trash text-primary\" (click)=\"delete($event, item.id)\" aria-hidden=\"true\"\r\n                      *showField=\"'SETTINGS_ROL_DELETE'\"></em>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-8 col-md-6 col-12 roles-right group-role mt-2\">\r\n      <p-card class=\"rbac-card\" [style]=\"{ width: '100%', 'margin-bottom': '2em' }\">\r\n        <div class=\"strip_head toggleleft\">\r\n          <span class=\"report_head font-weight-bold\">Role Details</span>\r\n        </div>\r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n          <div class=\"p-field col-lg-4 col-md-12 col-12\">\r\n            <label for=\"rolesName\" class=\"referral-form-labels\">Role Name\r\n              <span class=\"requiredfield text-danger\">*</span>\r\n            </label>\r\n            <input id=\"rolesName\" type=\"text\" fieldKey=\"SETTINGS_ROL_ROLE_NAME\" formControlName=\"name\"\r\n              placeholder=\"Enter Role Name\" aria-describedby=\"rolesName\" [(ngModel)]=\"modelRoleName\"\r\n              (ngModelChange)=\"onModelRole($event)\" pInputText />\r\n            <div *ngIf=\"formValidate['name'].errors && formSubmit\">\r\n              <small *ngIf=\"formValidate['name'].invalid\" class=\"p-error block\">Role Name is required </small>\r\n            </div>\r\n          </div>\r\n          <div class=\"p-field col-lg-4 col-md-12 col-12\">\r\n            <label aria-labelledby=\"policyGroupList\" for=\"policyGroupList\" class=\"referral-form-labels\"\r\n              >Policy Groups\r\n              <span class=\"requiredfield text-danger\">*</span>\r\n            </label>\r\n            <p-multiSelect name=\"policyGroupList\" [options]=\"policyGroupList\" formControlName=\"policyGroupId\"\r\n              defaultLabel=\"Select a policy group\" optionLabel=\"policygroupname\" optionValue=\"id\"\r\n              inputId=\"policyGroupList\" ariaFilterLabel=\"null\" fieldKey=\"SETTINGS_ROL_POLICY_GROUP\" display=\"chip\">\r\n            </p-multiSelect>\r\n            <div *ngIf=\"formValidate['policyGroupId'].errors && formSubmit\">\r\n              <small *ngIf=\"formValidate['policyGroupId'].invalid\" class=\"p-error block\">Policy Group is required </small>\r\n            </div>\r\n          </div>\r\n          <div class=\"p-field col-lg-4 col-md-12 col-12\">\r\n            <label aria-labelledby=\"landingPage\" for=\"landingPage\" class=\"referral-form-labels\">Landing Page\r\n              <span class=\"requiredfield text-danger\">*</span>\r\n            </label>\r\n            <p-dropdown name=\"landingPage\" [options]=\"landingPage\" formControlName=\"defaultpageid\"\r\n              defaultLabel=\"Select Landing Page\" fieldKey=\"SETTINGS_ROL_LANDING_PAGE\" optionLabel=\"name\"\r\n              optionValue=\"id\" inputId=\"landingPage\">\r\n            </p-dropdown>\r\n            <div *ngIf=\"formValidate['defaultpageid'].errors && formSubmit\">\r\n              <small *ngIf=\"formValidate['defaultpageid'].invalid\" class=\"p-error block\">Landing Page is required\r\n              </small>\r\n            </div>\r\n          </div>\r\n          <div class=\"p-field col-lg-4 col-md-12 col-12\">\r\n            <label aria-labelledby=\"dossierId\" for=\"dossierId\" class=\"referral-form-labels\">Report Dashboard</label>\r\n            <p-dropdown\r\n              [options]=\"reportDashboardList\"\r\n              optionLabel=\"name\"\r\n              id=\"dossierid\"\r\n              optionValue=\"id\"\r\n              placeholder=\"Select ID\"\r\n              formControlName=\"dossierid\"></p-dropdown>\r\n          </div>\r\n          <div class=\"p-field col-lg-4 col-md-12 col-12\"></div>\r\n          <div class=\"p-field col-lg-4 col-md-12 col-12\">\r\n            <!-- <button\r\n              class=\"pull-right mb-2 btn btn-primary btncommon report_button\"\r\n              fieldKey=\"SETTINGS_ROL_CONFIGURE_PERMISSION\"\r\n              (click)=\"addNewRole('1')\">\r\n              Configure Permission\r\n            </button> -->\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-2\" *ngIf=\"permissionAllow\">\r\n          <button fieldKey=\"SETTINGS_ROL_RESET\" class=\"pull-right mb-2 mr-2 btn bg-white text-primary btncancel\"\r\n            (click)=\"selectAllAccess(false)\">\r\n            Reset\r\n          </button>\r\n          <button class=\"pull-right mb-2 mr-2 btn btn-primary btncommon\" fieldKey=\"SETTINGS_ROL_SELECT_ALL\"\r\n            (click)=\"selectAllAccess(true)\">\r\n            Select All\r\n          </button>\r\n          <!-- <br /> -->\r\n        </div>\r\n        <div class=\"strip_head toggleleft adjusttop\" *ngIf=\"permissionAllow\">\r\n          <!-- <span class=\"report_head font-weight-bold\">Permissions</span> -->\r\n          <p-tabMenu [model]=\"items\" [activeItem]=\"activeItem\"></p-tabMenu>\r\n        </div>\r\n\r\n        <div *ngIf=\"firstTab\">\r\n          <div class=\"clearfix\"></div>\r\n          <div class=\"mt-4 mb-4\">\r\n            <p-accordion class=\"w-100\">\r\n              <p-accordionTab class=\"w-100\" *ngFor=\"let page of permissions; let i = index\">\r\n                <ng-template pTemplate=\"header\">\r\n                  {{ page.description }}\r\n                </ng-template>\r\n                <ng-template pTemplate=\"content\">\r\n                  <div class=\"heading_analysis datamargin\">\r\n                    <div class=\"Customcheckbox pl-1\">\r\n                      <input type=\"checkbox\" class=\"styled-checkbox\" id=\"custom{{ i }}\"\r\n                        (change)=\"selectAllPage(i, $event)\" [checked]=\"page?.checked\" />\r\n                      <label for=\"custom{{ i }}\" class=\"heading_role\">{{ page.description }}</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <ul class=\"marginul_list ecms_rolescroll\">\r\n                    <ng-container *ngFor=\"let permission of page?.permissions; let j = index\">\r\n                      <ng-container *ngIf=\"isPrivilage(permission); else permissionOnly\">\r\n                        <li>\r\n                          <div class=\"inner_childaccess d-flex mt-0 py-1\">\r\n                            <div class=\"d-inline-flex align-items-center\">\r\n                              <label class=\"Customcheckbox pl-1 mb-0\">\r\n                                <input type=\"checkbox\" [checked]=\"permission?.checked\"\r\n                                  (change)=\"selectAllPrivilage(i, j, $event)\" id=\"description{{ j }}\" />\r\n                                <span class=\"checkmark\"></span>\r\n                              </label>\r\n                              <label for=\"description{{ j }}\" class=\"heading_role mb-0\">{{\r\n                                permission.description\r\n                                }}</label>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <li class=\"ml-1\" *ngFor=\"let privilege of permission?.permissions; let k = index\">\r\n                          <div class=\"d-flex\">\r\n                            <div class=\"custom-control custom-switch\">\r\n                              <input type=\"checkbox\" [checked]=\"privilege?.checked\" class=\"custom-control-input\"\r\n                                id=\"customSwitchesroless{{ i }}{{ j }}{{ k }}\"\r\n                                (click)=\"selectPrivilege(i, j, k, $event)\" />\r\n                              <label class=\"custom-control-label\" for=\"customSwitchesroless{{ i }}{{ j }}{{ k }}\">{{\r\n                                privilege.description\r\n                                }}</label>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ng-container>\r\n                      <ng-template #permissionOnly>\r\n                        <li>\r\n                          <div class=\"custom-control custom-switch\">\r\n                            <input type=\"checkbox\" [checked]=\"permission?.checked\" class=\"custom-control-input\"\r\n                              (click)=\"selectPage(i, j, $event)\" id=\"customSwitchesroles{{ i }}{{ j }}\" />\r\n                            <label class=\"custom-control-label\" for=\"customSwitchesroles{{ i }}{{ j }}\">{{\r\n                              permission.description }}\r\n                            </label>\r\n                          </div>\r\n                        </li>\r\n                      </ng-template>\r\n                    </ng-container>\r\n                  </ul>\r\n                </ng-template>\r\n              </p-accordionTab>\r\n            </p-accordion>\r\n            <div class=\"col-md-12 box d-none\" *ngFor=\"let page of permissions; let i = index\">\r\n              <div class=\"heading_analysis datamargin\">\r\n                <div class=\"Customcheckbox\">\r\n                  <input type=\"checkbox\" class=\"styled-checkbox\" id=\"custom{{ i }}\" (change)=\"selectAllPage(i, $event)\"\r\n                    [checked]=\"page?.checked\" />\r\n                  <label for=\"custom{{ i }}\" class=\"heading_role\">{{ page.description }}</label>\r\n                </div>\r\n              </div>\r\n\r\n              <ul class=\"marginul_list ecms_rolescroll\">\r\n                <ng-container *ngFor=\"let permission of page?.permissions; let j = index\">\r\n                  <ng-container *ngIf=\"isPrivilage(permission); else permissionOnly\">\r\n                    <li>\r\n                      <div class=\"inner_childaccess\">\r\n                        <label class=\"Customcheckbox\">\r\n                          <input type=\"checkbox\" [checked]=\"permission?.checked\"\r\n                            (change)=\"selectAllPrivilage(i, j, $event)\" />\r\n                          <span class=\"checkmark\"></span>\r\n                        </label>\r\n                        <span class=\"heading_role\">{{ permission.description }}</span>\r\n                      </div>\r\n                    </li>\r\n                    <li *ngFor=\"let privilege of permission?.permissions; let k = index\">\r\n                      <div class=\"custom-control custom-switch\">\r\n                        <input type=\"checkbox\" [checked]=\"privilege?.checked\" class=\"custom-control-input\"\r\n                          id=\"customSwitchesroless{{ i }}{{ j }}{{ k }}\" (click)=\"selectPrivilege(i, j, k, $event)\" />\r\n                        <label class=\"custom-control-label\" for=\"customSwitchesroless{{ i }}{{ j }}{{ k }}\">{{\r\n                          privilege.description\r\n                          }}</label>\r\n                      </div>\r\n                    </li>\r\n                  </ng-container>\r\n                  <ng-template #permissionOnly>\r\n                    <li>\r\n                      <div class=\"custom-control custom-switch\">\r\n                        <input type=\"checkbox\" [checked]=\"permission?.checked\" class=\"custom-control-input\"\r\n                          (click)=\"selectPage(i, j, $event)\" id=\"customSwitchesroles{{ i }}{{ j }}\" />\r\n                        <label class=\"custom-control-label\" for=\"customSwitchesroles{{ i }}{{ j }}\">{{\r\n                          permission.description }}\r\n                        </label>\r\n                      </div>\r\n                    </li>\r\n                  </ng-template>\r\n                </ng-container>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"mt-2\">\r\n            <button class=\"pull-right mb-2 btn btn-primary btncommon\" fieldKey=\"SETTINGS_ROL_ADD_ROLE\"\r\n              (click)=\"addRole()\">\r\n              {{ roleId ? 'Update' : 'Add' }} Role\r\n            </button>\r\n            <button class=\"pull-right mb-2 mr-2 btn bg-white text-primary btncancel\" fieldKey=\"SETTINGS_ROL_CANCEL\"\r\n              (click)=\"cancel()\">\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"!firstTab\">\r\n\r\n          <div class=\"card flex justify-content-center\">\r\n            <p-tree [value]=\"mainMenuList\" [draggableNodes]=\"true\" [droppableNodes]=\"true\" draggableScope=\"self\"\r\n              droppableScope=\"self\" class=\"w-full md:w-30rem\" selectionMode=\"single\" [(selection)]=\"selectedFile\"\r\n              [validateDrop]=\"true\" (onNodeDrop)=\"nodeDrop($event)\"></p-tree>\r\n          </div>\r\n\r\n          <div class=\"mt-2\">\r\n            <button class=\"pull-right mb-2 btn btn-primary btncommon\" fieldKey=\"SETTINGS_ROL_ADD_ROLE\"\r\n              (click)=\"updateMenuOrder()\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n          <br />\r\n      </p-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal\" id=\"Deleteuser\" tabindex=\"-1\" role=\"dialog\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Delete Role</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        Are you sure you want to delete the Role?\r\n        <div class=\"clearfix\"></div>\r\n        <div class=\"mt-2\">\r\n          <button class=\"pull-right mb-2 btn btn-primary btncommon delete\" data-dismiss=\"modal\" (click)=\"deleteRole()\">\r\n            Delete\r\n          </button>\r\n          <button class=\"pull-right mb-2 mr-2 btn bg-white text-primary btncancel\" data-dismiss=\"modal\">Cancel</button>\r\n        </div>\r\n        <div class=\"clearfix\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PermissionStore } from './pics-rbac-roles/@core/permissions/permission.store';\r\nimport { DataStoreService } from './pics-rbac-roles/@core/service/data-store.service';\r\nimport { RBACINFO } from './pics-rbac-roles/@core/urls/rbac-url.config';\r\n\r\n@Component({\r\n  selector: 'rbac-roles',\r\n  template: `\r\n      <roles></roles>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class RbacRolesComponent implements OnInit {\r\n  @Input() public RBACORG?: RBACINFO = new RBACINFO();\r\n  @Input() public PERMISSION?: any;\r\n  @Input() public roleEvent!: Observable<any>;\r\n\r\n  constructor(\r\n    private permissionStore: PermissionStore,\r\n    private _storeservice: DataStoreService\r\n  ) {\r\n  }\r\n  ngOnInit() {\r\n     this.roleEvent.subscribe(val => {\r\n      this.RBACORG = val.RBACORG;\r\n      this.PERMISSION = val.PERMISSION;\r\n      this._storeservice.setData('RBACORG', this.RBACORG);\r\n      this.permissionStore.setStore(this.PERMISSION);\r\n      this._storeservice.setData('HTTPSERVICE',val.httpService);\r\n    })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PermissionDirective } from './permission.directive';\r\nimport { ShowFieldDirective } from './show-field.directives';\r\n\r\n@NgModule({\r\n  declarations: [PermissionDirective, ShowFieldDirective],\r\n  imports: [CommonModule],\r\n  exports: [PermissionDirective, ShowFieldDirective]\r\n})\r\nexport class DirectivesModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AlertComponent } from './alert.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [AlertComponent],\r\n  exports: [AlertComponent]\r\n})\r\nexport class AlertModule {}\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { ConfirmationService, TreeDragDropService } from 'primeng/api';\r\nimport { AvatarModule } from 'primeng/avatar';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CardModule } from 'primeng/card';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ConfirmPopupModule } from 'primeng/confirmpopup';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { EditorModule } from 'primeng/editor';\r\nimport { FieldsetModule } from 'primeng/fieldset';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputMaskModule } from 'primeng/inputmask';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { KnobModule } from 'primeng/knob';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { OrderListModule } from 'primeng/orderlist';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { SpeedDialModule } from 'primeng/speeddial';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { TreeSelectModule } from 'primeng/treeselect';\r\nimport { DirectivesModule } from './@core/directives/directives.module';\r\nimport { PermissionStore } from './@core/permissions/permission.store';\r\nimport { AlertService } from './@core/service/alert.service';\r\nimport { DataStoreService } from './@core/service/data-store.service';\r\nimport { MicrostrategyService } from './@core/service/microstrategy.service';\r\nimport { RbacService } from './@core/service/rbac.service';\r\nimport { AlertModule } from './@shared/alert/alert.module';\r\nimport { TreeModule } from 'primeng/tree';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RolesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    TabMenuModule,\r\n    TabViewModule,\r\n    TreeSelectModule,\r\n    // HttpClientModule,\r\n    CheckboxModule,\r\n    DropdownModule,\r\n    CardModule,\r\n    ConfirmDialogModule,\r\n    AccordionModule,\r\n    MessageModule,\r\n    TableModule,\r\n    InputTextModule,\r\n    CalendarModule,\r\n    EditorModule,\r\n    FieldsetModule,\r\n    ButtonModule,\r\n    RadioButtonModule,\r\n    InputTextareaModule,\r\n    InputMaskModule,\r\n    StepsModule,\r\n    ToastModule,\r\n    RippleModule,\r\n    AvatarModule,\r\n    BadgeModule,\r\n    MultiSelectModule,\r\n    InputSwitchModule,\r\n    ProgressSpinnerModule,\r\n    SpeedDialModule,\r\n    OrderListModule,\r\n    FileUploadModule,\r\n    DialogModule,\r\n    PasswordModule,\r\n    KnobModule,\r\n    SidebarModule,\r\n    ContextMenuModule,\r\n    ConfirmPopupModule,\r\n    DirectivesModule,\r\n    AlertModule,\r\n    TreeModule,\r\n    DragDropModule\r\n  ],\r\n  exports: [RolesComponent],\r\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [RbacService, MicrostrategyService, HttpClient, AlertService, ConfirmationService, PermissionStore,\r\n     DataStoreService, TreeDragDropService]\r\n})\r\nexport class PicsRbacRolesModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RbacRolesComponent } from './rbac-roles.component';\r\nimport { PicsRbacRolesModule } from './pics-rbac-roles/pics-rbac-roles.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RbacRolesComponent\r\n  ],\r\n  imports: [\r\n    PicsRbacRolesModule\r\n  ],\r\n  exports: [\r\n    RbacRolesComponent\r\n  ]\r\n  \r\n})\r\nexport class RbacRolesModule { }\r\n","/*\r\n * Public API Surface of rbac-roles\r\n */\r\n\r\nexport * from './lib/rbac-roles.service';\r\nexport * from './lib/rbac-roles.component';\r\nexport * from './lib/rbac-roles.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2.AlertService","i3.PermissionStore","i4.DataStoreService","i1.DataStoreService","i1.AlertService","i2","i1.PermissionStore","i3.MicrostrategyService","i4.RbacService","i5.DataStoreService","i6.AlertComponent","i13.PermissionDirective","i15.ShowFieldDirective","i2.DataStoreService","i3.RolesComponent"],"mappings":"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"}